public abstract class Publicacion {
    protected String titulo;
    protected String autor;
    protected int año;

    public Publicacion(String titulo, String autor, int año) {
        this.titulo = titulo;
        this.autor = autor;
        this.año = año;
    }

    public abstract void mostrarDetalles();

    public final String getInformacionBasica() {
        return "Título: " + titulo + ", Autor: " + autor + ", Año: " + año;
    }

    public String getTitulo() {
        return titulo;
    }
}

public final class Libro extends Publicacion {
    private final String isbn;
    private final int numPaginas;

    public Libro(String titulo, String autor, int año, String isbn, int numPaginas) {
        super(titulo, autor, año);
        this.isbn = isbn;
        this.numPaginas = numPaginas;
    }

    @Override
    public void mostrarDetalles() {
        System.out.println(getInformacionBasica() + 
                         ", Tipo: Libro, ISBN: " + isbn + 
                         ", Páginas: " + numPaginas);
    }

    public String getIsbn() {
        return isbn;
    }
}

public final class Revista extends Publicacion {
    private final int volumen;
    private final int numero;

    public Revista(String titulo, String autor, int año, int volumen, int numero) {
        super(titulo, autor, año);
        this.volumen = volumen;
        this.numero = numero;
    }

    @Override
    public void mostrarDetalles() {
        System.out.println(getInformacionBasica() + 
                         ", Tipo: Revista, Volumen: " + volumen + 
                         ", Número: " + numero);
    }
}

public final class Tesis extends Publicacion {
    private final String universidad;
    private final String gradoAcademico;

    public Tesis(String titulo, String autor, int año, String universidad, String gradoAcademico) {
        super(titulo, autor, año);
        this.universidad = universidad;
        this.gradoAcademico = gradoAcademico;
    }

    @Override
    public void mostrarDetalles() {
        System.out.println(getInformacionBasica() + 
                         ", Tipo: Tesis, Universidad: " + universidad + 
                         ", Grado: " + gradoAcademico);
    }
}


import java.util.ArrayList;
import java.util.List;

public class Usuario {
    private String id;
    private String nombre;

    public Usuario(String id, String nombre) {
        this.id = id;
        this.nombre = nombre;
    }

    public String getId() {
        return id;
    }

    public String getNombre() {
        return nombre;
    }

    public void solicitarPrestamo(Publicacion publicacion, Biblioteca biblioteca) {
        biblioteca.registrarPrestamo(this, publicacion);
    }
}

public interface Autor {
    void agregarPublicacion(Publicacion publicacion);
    List<Publicacion> getPublicaciones();
}

public class UsuarioAutor extends Usuario implements Autor {
    private List<Publicacion> publicaciones;

    public UsuarioAutor(String id, String nombre) {
        super(id, nombre);
        this.publicaciones = new ArrayList<>();
    }

    @Override
    public void agregarPublicacion(Publicacion publicacion) {
        publicaciones.add(publicacion);
    }

    @Override
    public List<Publicacion> getPublicaciones() {
        return new ArrayList<>(publicaciones);
    }
}

public class Prestamo {
    private final Publicacion publicacion;
    private final Usuario usuario;
    private String fechaInicio;
    private String fechaDevolucion;
    private boolean devuelto;

    public Prestamo(Publicacion publicacion, Usuario usuario, String fechaInicio) {
        this.publicacion = publicacion;
        this.usuario = usuario;
        this.fechaInicio = fechaInicio;
        this.devuelto = false;
    }

    public void registrarDevolucion(String fechaDevolucion) {
        this.fechaDevolucion = fechaDevolucion;
        this.devuelto = true;
    }

    public Publicacion getPublicacion() {
        return publicacion;
    }

    public Usuario getUsuario() {
        return usuario;
    }

    public boolean isDevuelto() {
        return devuelto;
    }

    public String getFechaInicio() {
        return fechaInicio;
    }

    public String getFechaDevolucion() {
        return fechaDevolucion;
    }
}



import java.util.ArrayList;
import java.util.List;

public class Biblioteca {
    private List<Publicacion> publicaciones;
    private List<Usuario> usuarios;
    private List<Prestamo> prestamos;

    public Biblioteca() {
        this.publicaciones = new ArrayList<>();
        this.usuarios = new ArrayList<>();
        this.prestamos = new ArrayList<>();
    }

    public void agregarPublicacion(Publicacion publicacion) {
        publicaciones.add(publicacion);
    }

    public void registrarUsuario(Usuario usuario) {
        usuarios.add(usuario);
    }

    public void registrarPrestamo(Usuario usuario, Publicacion publicacion, String fechaInicio) {
        if (publicaciones.contains(publicacion) && usuarios.contains(usuario)) {
            Prestamo prestamo = new Prestamo(publicacion, usuario, fechaInicio);
            prestamos.add(prestamo);
        }
    }

    public void registrarDevolucion(Prestamo prestamo, String fechaDevolucion) {
        if (prestamos.contains(prestamo)) {
            prestamo.registrarDevolucion(fechaDevolucion);
        }
    }

    public List<Prestamo> getPrestamosActivos() {
        List<Prestamo> activos = new ArrayList<>();
        for (Prestamo p : prestamos) {
            if (!p.isDevuelto()) {
                activos.add(p);
            }
        }
        return activos;
    }

    public List<Publicacion> buscarPorTitulo(String titulo) {
        List<Publicacion> resultados = new ArrayList<>();
        for (Publicacion p : publicaciones) {
            if (p.getTitulo().toLowerCase().contains(titulo.toLowerCase())) {
                resultados.add(p);
            }
        }
        return resultados;
    }
}





public class Main {
    public static void main(String[] args) {
        // Crear biblioteca
        Biblioteca biblioteca = new Biblioteca();

        // Crear publicaciones
        Libro libro = new Libro("Clean Code", "Robert Martin", 2008, "978-0132350884", 464);
        Revista revista = new Revista("National Geographic", "Varios", 2023, 243, 5);
        Tesis tesis = new Tesis("Machine Learning Applications", "Ana Pérez", 2022, "Universidad Nacional", "Doctorado");

        // Agregar publicaciones a la biblioteca
        biblioteca.agregarPublicacion(libro);
        biblioteca.agregarPublicacion(revista);
        biblioteca.agregarPublicacion(tesis);

        // Crear usuarios
        Usuario usuario1 = new Usuario("U001", "Juan González");
        UsuarioAutor usuario2 = new UsuarioAutor("U002", "María López");

        // Registrar usuarios
        biblioteca.registrarUsuario(usuario1);
        biblioteca.registrarUsuario(usuario2);

        // Usuario que es también autor
        usuario2.agregarPublicacion(tesis); // María es autora de la tesis

        // Realizar préstamos con fechas manuales
        biblioteca.registrarPrestamo(usuario1, libro, "2023-10-01");
        biblioteca.registrarPrestamo(usuario2, revista, "2023-10-02");

        // Mostrar detalles de publicaciones
        libro.mostrarDetalles();
        revista.mostrarDetalles();
        tesis.mostrarDetalles();
    }
}
